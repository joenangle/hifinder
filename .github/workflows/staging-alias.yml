name: Update Staging Alias

on:
  push:
    branches: [staging]

jobs:
  update-staging-alias:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Wait for deployment and update alias
        run: |
          set -e  # Exit on any error

          echo "üïê Waiting for Vercel deployment to complete..."
          echo "Commit SHA: ${{ github.sha }}"

          MAX_ATTEMPTS=12
          ATTEMPT=0
          SLEEP_INTERVAL=10
          GIT_STAGING_ALIAS="https://hifinder-git-staging-joenangles-projects.vercel.app"

          while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
            ATTEMPT=$((ATTEMPT + 1))
            echo "Attempt $ATTEMPT/$MAX_ATTEMPTS (checking every ${SLEEP_INTERVAL}s)..."

            # Inspect the git-staging alias to find the actual deployment URL
            INSPECT_OUTPUT=$(vercel inspect "$GIT_STAGING_ALIAS" --token "${{ secrets.VERCEL_TOKEN }}" --scope "${{ secrets.VERCEL_ORG_ID }}" 2>&1) || {
              echo "‚ùå Failed to inspect deployment"
              echo "Output: $INSPECT_OUTPUT"
              exit 1
            }

            # Extract the actual deployment URL
            DEPLOYMENT_URL=$(echo "$INSPECT_OUTPUT" | grep -o 'https://hifinder-[a-z0-9]*-[^[:space:]]*\.vercel\.app' | head -1)

            if [ -z "$DEPLOYMENT_URL" ]; then
              echo "Could not find deployment URL yet, waiting ${SLEEP_INTERVAL}s..."
              sleep $SLEEP_INTERVAL
              continue
            fi

            echo "Found deployment: $DEPLOYMENT_URL"

            # Check if deployment is ready
            if echo "$INSPECT_OUTPUT" | grep -q "status.*‚óè Ready"; then
              echo "‚úÖ Deployment is Ready!"
              echo "Updating staging.hifinder.app to point to: $DEPLOYMENT_URL"

              # Run alias command and capture full output
              ALIAS_OUTPUT=$(vercel alias set "$DEPLOYMENT_URL" staging.hifinder.app --token "${{ secrets.VERCEL_TOKEN }}" --scope "${{ secrets.VERCEL_ORG_ID }}" 2>&1) || {
                echo "‚ùå Alias command failed with exit code $?"
                echo "Output: $ALIAS_OUTPUT"
                exit 1
              }

              echo "Alias command output:"
              echo "$ALIAS_OUTPUT"

              # Verify the alias was actually set
              echo "Verifying alias was set correctly..."
              VERIFY_OUTPUT=$(vercel inspect staging.hifinder.app --scope "${{ secrets.VERCEL_ORG_ID }}" 2>&1) || {
                echo "‚ùå Failed to verify alias"
                exit 1
              }

              VERIFIED_URL=$(echo "$VERIFY_OUTPUT" | grep -o 'https://hifinder-[a-z0-9]*-[^[:space:]]*\.vercel\.app' | head -1)

              if [ "$VERIFIED_URL" = "$DEPLOYMENT_URL" ]; then
                echo "‚úÖ Successfully updated and verified staging.hifinder.app!"
                echo "‚úÖ staging.hifinder.app ‚Üí $DEPLOYMENT_URL"
                exit 0
              else
                echo "‚ùå Alias verification failed!"
                echo "Expected: $DEPLOYMENT_URL"
                echo "Got: $VERIFIED_URL"
                exit 1
              fi
            else
              echo "‚è≥ Deployment not ready yet, waiting ${SLEEP_INTERVAL}s..."
              sleep $SLEEP_INTERVAL
            fi
          done

          echo "‚ùå Timeout waiting for deployment to be ready"
          exit 1