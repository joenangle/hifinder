name: Update Staging Alias

on:
  push:
    branches: [staging]

jobs:
  update-staging-alias:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Wait for Vercel deployment
        run: |
          echo "Waiting for Vercel deployment to complete..."
          sleep 90  # Give Vercel time to start and complete deployment (builds take 60s+)

          # Get the latest Preview deployment URL - simple and bulletproof approach
          DEPLOYMENT_URL=$(vercel ls --yes --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} | grep -E 'Ready.*Preview|Preview.*Ready' | head -1 | grep -o 'https://[^[:space:]]*')

          if [ -z "$DEPLOYMENT_URL" ]; then
            echo "No Ready Preview deployment found. Showing debug output:"
            vercel ls --yes --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} | head -5
            echo "Raw first line with Ready:"
            vercel ls --yes --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} | grep Ready | head -1
            exit 1
          fi

          echo "Found deployment: $DEPLOYMENT_URL"
          echo "DEPLOYMENT_URL=$DEPLOYMENT_URL" >> $GITHUB_ENV

      - name: Update staging alias
        run: |
          echo "Updating staging.hifinder.app to point to $DEPLOYMENT_URL"
          vercel alias set $DEPLOYMENT_URL staging.hifinder.app --yes --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }}
          echo "âœ… Successfully updated staging.hifinder.app alias!"

      - name: Verify alias update
        run: |
          echo "Verifying alias was updated successfully..."
          vercel alias ls --yes --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} | grep staging.hifinder.app