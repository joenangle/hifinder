name: Update Staging Alias

on:
  push:
    branches: [staging]

jobs:
  update-staging-alias:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Install Vercel CLI
        run: npm install --global vercel@latest

      - name: Wait for deployment and update alias
        run: |
          echo "üïê Waiting for Vercel deployment to complete..."
          echo "Commit SHA: ${{ github.sha }}"
          COMMIT_SHA="${{ github.sha }}"
          SHORT_SHA="${COMMIT_SHA:0:7}"

          MAX_ATTEMPTS=20
          ATTEMPT=0

          while [ $ATTEMPT -lt $MAX_ATTEMPTS ]; do
            ATTEMPT=$((ATTEMPT + 1))
            echo "Attempt $ATTEMPT/$MAX_ATTEMPTS..."

            # Get all recent deployments (filter for actual deployment URLs, skip headers/footers)
            DEPLOYMENTS=$(vercel ls --yes --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} 2>&1 | grep -o 'https://hifinder-[^[:space:]]*\.vercel\.app')

            if [ -z "$DEPLOYMENTS" ]; then
              echo "No deployments found yet, waiting 30s..."
              sleep 30
              continue
            fi

            echo "Found $(echo "$DEPLOYMENTS" | wc -l) deployment(s), checking for matching commit..."

            # Check each deployment to find one matching our commit SHA
            FOUND_DEPLOYMENT=""
            for URL in $DEPLOYMENTS; do
              echo "Checking deployment: $URL"

              # Get deployment details using vercel inspect
              INSPECT_OUTPUT=$(vercel inspect "$URL" --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }} 2>&1)

              # Check if this deployment matches our commit SHA (check both full and short SHA)
              if echo "$INSPECT_OUTPUT" | grep -q "$COMMIT_SHA\|$SHORT_SHA"; then
                echo "‚úÖ Found matching deployment for commit $SHORT_SHA"

                # Check if deployment is ready
                if echo "$INSPECT_OUTPUT" | grep -q "Ready"; then
                  FOUND_DEPLOYMENT="$URL"
                  echo "‚úÖ Deployment is Ready!"
                  break
                else
                  echo "‚è≥ Deployment found but not ready yet..."
                  break
                fi
              fi
            done

            if [ -n "$FOUND_DEPLOYMENT" ]; then
              echo "Updating staging alias to: $FOUND_DEPLOYMENT"

              vercel alias set "$FOUND_DEPLOYMENT" staging.hifinder.app --token ${{ secrets.VERCEL_TOKEN }} --scope ${{ secrets.VERCEL_ORG_ID }}

              if [ $? -eq 0 ]; then
                echo "‚úÖ Successfully updated staging.hifinder.app!"
                exit 0
              else
                echo "‚ùå Failed to update alias"
                exit 1
              fi
            else
              echo "Deployment not ready yet, waiting 30s..."
              sleep 30
            fi
          done

          echo "‚ùå Timeout waiting for deployment to be ready"
          exit 1